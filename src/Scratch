/* Small devices (landscape phones, 576px and up) */
@media (max-width: 576px) { 
  #header-title {
    color: white;
    font-size: 24px;
  }
  #header-text {
    text-align: center;
    position: absolute;
    top: 30%;
    left: 50%;
    transform: translateX(-50%);
  }

  th:nth-child(4){
    display:none;
  }
  td:nth-child(4){
    display:none;
  }
  td{
    font-size: 12px;
  }
  table{
    width: 100%;
  }
  .submit {
    min-width: 70%;
    height: 50px;
    border-radius: 12px 12px 12px 12px;
    border: none;
    background-color: #2C3690;
    color: white;
    font-weight: bold;
    margin-top: 16px;
    margin-bottom: 16px;
  }
  input {
    font-size: 12px;
    padding-left: 12px;
    padding-right: 12px;
  }
}

/* Medium devices (tablets, 768px and up) */
@media (max-width: 768px) { 
  input {
    font-size: 12px;
    padding-left: 16px;
    padding-right: 16px;
  }
  th:nth-child(4){
    display:none;
  }
  td:nth-child(4){
    display:none;
  }
  table {
    min-width: 76%;
  }
}

/* Large devices (desktops, 992px and up) */
@media (max-width: 992px) { 
  #header-title {
    color: white;
    font-size: 36px;
  }
  #header-text {
      text-align: center;
      position: absolute;
      top: 30%;
      left: 50%;
      transform: translateX(-50%);
  }
  th:nth-child(4){
    display: block;
  }
  td:nth-child(4){
    display: block;
  }
  table{
    width: 76%
  }
  .submit {
    min-width:25%;
    height: 50px;
    border-radius: 12px 12px 12px 12px;
    border: none;
    background-color: #2C3690;
    color: white;
    font-weight: bold;
    margin-top: 16px;
  
  }
  input {
    font-size: 16px;
    padding-left: 16px;
    padding-right: 16px;
  }
}

@media (min-width: 992px) { 
  #header-title {
    color: white;
    font-size: 36px;
  }
  #header-text {
      text-align: center;
      position: absolute;
      top: 30%;
      left: 50%;
      transform: translateX(-50%);
  }
  th:nth-child(4){
    display: block;
  }
  td:nth-child(4){
    display: block;
  }
  table{
    width: 76%
  }
  .submit {
    min-width:25%;
    height: 50px;
    border-radius: 12px 12px 12px 12px;
    border: none;
    background-color: #2C3690;
    color: white;
    font-weight: bold;
    margin-top: 16px;
  
  }
  input {
    font-size: 16px;
    padding-left: 16px;
    padding-right: 16px;
  }
  #scroll {
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    bottom: -124%;
  }
  #scroll-text {
    padding-bottom: 16px;
    color: white;
    font-size: 16px;
  }
}







// constructor(props) {
      
  //     super(props);
    
  //     this.state = {joblist : []}
  //   }
      
  //   componentDidMount() {
  //     firebase.database().ref("1h5GOL1WIfNEOtcxJVFQ0x_bgJxsPN5zJgVJOePmgJOY/Jobs").on("value", snapshot => {
  //       let jobs = [];
  //       snapshot.forEach(snap => {
  //           // snap.val() is the dictionary with all your keys/values from the 'students-list' path
  //           jobs.push(snap.val());
  //       });
  //       this.setState({ joblist: jobs });
  //     });

  //   }


  // const {joblist} = this.state;
    // const jobListLength = joblist.length;
    // if (joblist.length > 0) console.log(joblist[0].company); 

    import firebase  from './initfirebase';
import React from 'react';
import Header from './components/Header.js';
import TableHeader from './components/TableHeader.js';
import Footer from './components/Footer.js';
import './App.css';
import { makeStyles } from '@material-ui/core/styles';


const useStyles = makeStyles({
  table: {
    minWidth: 650,
  },
});

class App extends React.Component {
  
  constructor(props) {
      
      super(props);
    
      this.state = {joblist : []}
    }
      
    componentDidMount() {
      firebase.database().ref("1h5GOL1WIfNEOtcxJVFQ0x_bgJxsPN5zJgVJOePmgJOY/Jobs").on("value", snapshot => {
        let jobs = [];
        snapshot.forEach(snap => {
            // snap.val() is the dictionary with all your keys/values from the 'students-list' path
            jobs.push(snap.val());
        });
        this.setState({ joblist: jobs });
      });

    }
    render(){
    const {joblist} = this.state;
    const jobListLength = joblist.length;
    if (joblist.length > 0) console.log(joblist[0].company); 
    return ( 
      <div id='body'>
        

        <Header />
        <section id='table'>
          <TableHeader count = {jobListLength} />
          <table class="table">
                <thead class="thead-dark">
                    <tr>
                        <th>Company</th>
                        <th>Location</th>
                        <th>Position</th>
                        <th>Date Posted</th>
                    </tr>
                </thead>
                <tbody>
                {this.state.joblist.map(data => {
                    
                    return (
                        <tr>     
                        <td>{data.company}</td>
                        <td>{data.location}</td>
                        <td>{data.position}</td>
                        <td>{data.datePosted}</td>
                        </tr>
                        
                    );
                  
                    })}
            
                  
                </tbody>
                
            </table>
            <Footer />
           </section>
      </div>
      
    );
  }
  }
  export default App;
  // If you want to start measuring performance in your app, pass a function
  // to log results (for example: reportWebVitals(console.log))
  // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals
  // <div className="MainDiv">
  //       <div class="jumbotron text-center bg-sky">
  //           <h3>How to show firebase data in reactjs?</h3>
  //       </div>
      
  //       <div className="container">

            
  //      </div>
  //     </div>


  import firebase  from './initfirebase';
import React, { useEffect, useState } from 'react';
import Header from './components/Header.js';
import TableHeader from './components/TableHeader.js';
import Footer from './components/Footer.js';
import Login from './components/Login.js';
import Signup from './components/Signup.js';
import Table from './components/Table.js';
import './App.css';
import { makeStyles } from '@material-ui/core/styles';

const useStyles = makeStyles({
  table: {
    minWidth: 650,
  },
});
// const [user, setUser] = useState(null);
class App extends React.Component {
  
  
  constructor(props) {
      
      super(props);
    
      this.state = {joblist : [], user : null}
      
    }
      
    componentDidMount() {
      firebase.database().ref("1h5GOL1WIfNEOtcxJVFQ0x_bgJxsPN5zJgVJOePmgJOY/Jobs").on("value", snapshot => {
        let jobs = [];
        snapshot.forEach(snap => {
            jobs.push(snap.val());
        });
        this.setState({ joblist: jobs });
      });

    }
    render(){

      useEffect(() => {
          const unsubscribe = auth.onAuthStateChanged(userAuth => {
          const user = {
          uid: userAuth.uid,
          email: userAuth.email
          }
          if (userAuth) {
          console.log('userAuth', userAuth)
          setUser(user)
          } else {
          setUser(null)
          }
          })
          return unsubscribe
          }, [])
    const auth = firebase.auth();
    const {joblist} = this.state;
    const jobListLength = joblist.length;
    let currDate = 0
    if (joblist.length > 0) {
      currDate = (joblist[joblist.length-1].uploadDate); 
    }
    return ( 
      <div id='body'>
        <Login auth = {auth}/>
        <Signup auth = {auth}/>
        <Header />
        <section id='table'>
            <TableHeader count = {jobListLength} date ={currDate}/>
            <Table jobs = {joblist} count = {jobListLength}/>
            <Footer />
        </section>
      </div>
      
    );
  }
  }
  export default App;


import React from "react";
function PhoneInput(){
    return (
        <div className='PhoneInput'>
                <input
                    className="submit"
                    type="submit"
                    value="Subscribe to Newsletter"
                />
        </div>
    );
}

 
export default PhoneInput;


"1h5GOL1WIfNEOtcxJVFQ0x_bgJxsPN5zJgVJOePmgJOY/Jobs"








            {user ? <button onClick={handleLogout}>logout</button> : <div><Login auth={auth} /></div>}
